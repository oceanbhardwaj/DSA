class Solution {
    public int maxProfit(int[] prices) {
        int dp[][]=new int[prices.length][2];
        for(int i=0;i<prices.length;i++){
            Arrays.fill(dp[i],-1);
        }
        return call(prices,0,0,dp);
        
    }
    public int call(int prices[],int i,int buyorSell,int dp[][]){
        if(i>=prices.length)
            return 0;
        int buymax=0;
        int sellmax=0;
        if(dp[i][buyorSell]!=-1)
            return dp[i][buyorSell];
        if(buyorSell==0){
            int buy=-prices[i]+call(prices,i+1,1,dp);
            int nobuy=call(prices,i+1,0,dp);
           buymax=Math.max(buy,nobuy); 
        }else{
            int sell=prices[i]+call(prices,i+2,0,dp);
            int nosell=call(prices,i+1,1,dp);
            sellmax=Math.max(sell,nosell) ;
        }
        return dp[i][buyorSell]=Math.max(buymax,sellmax);
    }
}